/*!
 * @georapbox/mutation-observer-element
 * A custom element that offers a declarative interface to the MutationObserver API.
 *
 * @version 2.0.1
 * @homepage https://github.com/georapbox/mutation-observer-element#readme
 * @author George Raptis <georapbox@gmail.com>
 * @license MIT
 */
var l=":host { display: contents; }",i=document.createElement("template");i.innerHTML=`
  <style>${l}</style>
  <slot></slot>
`;var a=class r extends HTMLElement{#s=!1;#e=null;constructor(){super(),this.shadowRoot||this.attachShadow({mode:"open"}).appendChild(i.content.cloneNode(!0))}static get observedAttributes(){return["disabled","attr","attr-old-value","char-data","char-data-old-value","child-list"]}attributeChangedCallback(t,e,s){t==="disabled"&&e!==s&&this.#s&&(this.disabled?this.#i():this.#a()),(t==="attr"||t==="attr-old-value"||t==="char-data"||t==="char-data-old-value"||t==="child-list")&&e!==s&&this.#s&&(this.#i(),this.#a())}connectedCallback(){this.#t("disabled"),this.#t("attr"),this.#t("attrOldValue"),this.#t("charData"),this.#t("charDataOldValue"),this.#t("childList"),this.#s=!0,"MutationObserver"in window&&(this.#e=new MutationObserver(this.#r),this.disabled||this.#a())}disconnectedCallback(){this.#s=!1,this.#i()}get disabled(){return this.hasAttribute("disabled")}set disabled(t){this.toggleAttribute("disabled",!!t)}get attr(){return this.getAttribute("attr")||""}set attr(t){this.setAttribute("attr",t)}get attrOldValue(){return this.hasAttribute("attr-old-value")}set attrOldValue(t){this.toggleAttribute("attr-old-value",!!t)}get charData(){return this.hasAttribute("char-data")}set charData(t){this.toggleAttribute("char-data",!!t)}get charDataOldValue(){return this.hasAttribute("char-data-old-value")}set charDataOldValue(t){t?this.setAttribute("char-data-old-value",""):this.removeAttribute("char-data-old-value")}get childList(){return this.hasAttribute("child-list")}set childList(t){t?this.setAttribute("child-list",""):this.removeAttribute("child-list")}#a(){if(!this.#e)return;let t=typeof this.attr=="string"&&this.attr.length>0;try{this.#e.observe(this,{subtree:!0,attributes:t,attributeOldValue:this.attrOldValue,attributeFilter:t&&this.attr!=="*"?this.attr.split(" "):void 0,childList:this.childList,characterData:this.charData,characterDataOldValue:this.charDataOldValue})}catch{}}#i(){this.#e&&this.#e.disconnect()}#r=t=>{this.dispatchEvent(new CustomEvent("mutation-observer:mutate",{bubbles:!0,composed:!0,detail:{mutationList:t}}))};#t(t){let e=this;if(Object.prototype.hasOwnProperty.call(e,t)){let s=e[t];delete e[t],e[t]=s}}static defineCustomElement(t="mutation-observer"){typeof window<"u"&&!window.customElements.get(t)&&window.customElements.define(t,r)}};a.defineCustomElement();export{a as MutationObserverElement};
